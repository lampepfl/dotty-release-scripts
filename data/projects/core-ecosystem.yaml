scala3-example-project:
  upstream: https://github.com/scala/scala3-example-project
  upstream_branch: main
  staging: https://github.com/dotty-staging/scala3-example-project
  test_spec:
    command: sbt run
  update_spec:
    - file: README.md
      pattern: scalaVersion\s*:=\s*"{scala3_version_pattern}"
      replacement: scalaVersion := "{release_version}"
    - file: build.sbt
      pattern: scalaVersion\s*:=\s*"{scala3_version_pattern}"
      replacement: scalaVersion := "{release_version}"

scala3-mill-example-project:
  upstream: https://github.com/scala/scala3-mill-example-project
  upstream_branch: main
  staging: https://github.com/dotty-staging/scala3-mill-example-project
  test_spec:
    command: ./mill root.run
  update_spec:
    - file: README.md
      pattern: scalaVersion\s*=\s*"{scala3_version_pattern}"
      replacement: scalaVersion = "{release_version}"
    - file: build.sc
      pattern: scalaVersion\s*=\s*"{scala3_version_pattern}"
      replacement: scalaVersion = "{release_version}"

scala3-cross.g8:
  upstream: https://github.com/scala/scala3-cross.g8
  upstream_branch: main
  staging: https://github.com/dotty-staging/scala3-cross.g8
  test_spec:
    run_from_root: True
    command: >
      rm -rf foo ;
      sbt new file://./scala3-cross.g8 --name=foo --description=bar &&
      cd foo &&
      sbt run
  update_spec:
    - file: src/main/g8/build.sbt
      pattern: scala3Version\s*=\s*"{scala3_version_pattern}"
      replacement: scala3Version = "{release_version}"

scala3-staging.g8:
  upstream: https://github.com/scala/scala3-staging.g8
  upstream_branch: main
  staging: https://github.com/dotty-staging/dotty-staging.g8
  test_spec:
    run_from_root: True
    command: >
      rm -rf foo ;
      sbt new file://./scala3-staging.g8 --name=foo --description=bar &&
      cd foo &&
      sbt ";run; test"
  update_spec:
    - file: src/main/g8/build.sbt
      pattern: scala3Version\s*=\s*"{scala3_version_pattern}"
      replacement: scala3Version = "{release_version}"

scala3-tasty-inspector.g8:
  upstream: https://github.com/scala/scala3-tasty-inspector.g8
  upstream_branch: main
  staging: https://github.com/dotty-staging/dotty-tasty-inspector.g8
  test_spec:
    run_from_root: True
    command: >
      rm -rf foo ;
      sbt new file://./scala3-tasty-inspector.g8 --name=foo --description=bar &&
      cd foo &&
      sbt ";lib/test ;inspector/run ;inspector/test"
  update_spec:
    - file: src/main/g8/build.sbt
      pattern: scala3Version\s*=\s*"{scala3_version_pattern}"
      replacement: scala3Version = "{release_version}"
    - file: src/main/g8/inspector/src/main/scala/inspector/Main.scala
      pattern: lib/target/scala-{scala3_version_pattern}
      replacement: lib/target/scala-{release_version}
    - file: src/main/g8/inspector/src/test/scala/inspector/Test.scala
      pattern: lib/target/scala-{scala3_version_pattern}
      replacement: lib/target/scala-{release_version}

xml-interpolator:
  upstream: https://github.com/lampepfl/xml-interpolator
  staging: https://github.com/dotty-staging/xml-interpolator
  test_spec:
    command: sbt test
  update_spec:
    - file: build.sbt
      pattern: dottyVersion\s*=\s*"{scala3_version_pattern}"
      replacement: dottyVersion = "{release_version}"

scastie:
  upstream: https://github.com/scalacenter/scastie
  staging: https://github.com/dotty-staging/scastie
  test_spec:
    command: echo 'No test available for Scastie'
  update_spec:
    - file: project/SbtShared.scala
      pattern: val\s+latest3\s*=\s*"{scala3_version_pattern}"
      replacement: val latest3   = "{release_version}"

coursier-apps:
  upstream: https://github.com/coursier/apps
  staging: https://github.com/dotty-staging/coursierapps
  test_spec:
    command: echo 'No test available for Coursier'
  update_spec:
    - file: apps/resources/dotty-repl.json
      pattern: org.scala-lang:scala3-compiler_{scala3_version_pattern}\:latest.release
      replacement: org.scala-lang:scala3-compiler_{release_version}:latest.release
    - file: apps/resources/scala3-compiler.json
      pattern: org.scala-lang:scala3-compiler_{scala3_version_pattern}\:{scala3_version_pattern}
      replacement: org.scala-lang:scala3-compiler_{release_version}:{release_version}
    - file: apps/resources/scala3-decompiler.json
      pattern: org.scala-lang:scala3-compiler_{scala3_version_pattern}\:{scala3_version_pattern}
      replacement: org.scala-lang:scala3-compiler_{release_version}:{release_version}
    - file: apps/resources/scala3-doc.json
      pattern: org.scala-lang:scala3-doc_{scala3_version_pattern}\:{scala3_version_pattern}
      replacement: org.scala-lang:scala3-doc_{release_version}:{release_version}
    - file: apps/resources/scala3-repl.json
      pattern: org.scala-lang:scala3-compiler_{scala3_version_pattern}\:{scala3_version_pattern}
      replacement: org.scala-lang:scala3-compiler_{release_version}:{release_version}

scala-2:
  upstream: https://github.com/scala/scala
  upstream_branch: 2.13.x
  staging: https://github.com/dotty-staging/scala
  test_spec:
    command: echo 'No test available for scala/scala'
  update_spec:
    - file: project/DottySupport.scala
      pattern: val\s+dottyVersion\s*=\s*"{scala3_version_pattern}"
      replacement: val dottyVersion = "{release_version}"

homebrew:
  upstream: https://github.com/lampepfl/homebrew-brew
  project_class: release.ecosystem.overrides.Homebrew
  test_spec:
    command: echo 'No test available for Homebrew'
  update_spec:
    - file: dotty.rb
      pattern: url\s+"https://github\.com/lampepfl/dotty/releases/download/{scala3_version_pattern}/scala3-{scala3_version_pattern}\.tar\.gz"
      replacement: url "https://github.com/lampepfl/dotty/releases/download/{release_version}/scala3-{release_version}.tar.gz"
    - file: dotty.rb
      pattern: sha256 "[0-9a-z]+"
      replacement: sha256 "$release_hash"

dotty:
  upstream: https://github.com/lampepfl/dotty
  staging: https://github.com/dotty-staging/dotty
  test_spec:
    command: echo 'No test available for Dotty'
  update_spec:
    - file: project/Build.scala
      pattern: val\s+referenceVersion\s*=\s*"{scala3_version_pattern}"
      replacement: val referenceVersion = "{release_version}"

scala3.g8:
  upstream: https://github.com/scala/scala3.g8
  upstream_branch: main
  staging: https://github.com/dotty-staging/scala3.g8
  test_spec:
    run_from_root: True
    command: >
      rm -rf foo ;
      sbt new file://./scala3.g8 --name=foo --description=bar &&
      cd foo &&
      sbt ";run ;test"
  update_spec:
    - file: src/main/g8/build.sbt
      pattern: val\s+scala3Version\s*=\s*"{scala3_version_pattern}"
      replacement: val scala3Version = "{release_version}"
